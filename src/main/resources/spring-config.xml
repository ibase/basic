<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/task
		   http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- task定时任务扫描注解 -->
    <task:annotation-driven/>

    <!-- about datasource -->
    <!-- jdbc config -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:basic.properties" />
    </bean>

    <!-- spring lazy connection datasource -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource">
            <ref local="tcDataSource" />
        </property>
    </bean>

    <!-- tomcat pool -->
    <bean id="tcDataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="poolProperties">
            <bean class="org.apache.tomcat.jdbc.pool.PoolProperties">
                <property name="url" value="${driverUrl}"/>
                <property name="driverClassName" value="${driverClass}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
                <property name="jmxEnabled" value="false"/>
                <property name="testWhileIdle" value="false"/>
                <property name="testOnBorrow" value="true"/>
                <property name="validationInterval" value="30000"/>
                <property name="testOnReturn" value="false"/>
                <property name="validationQuery" value="select 1"/>
                <property name="timeBetweenEvictionRunsMillis" value="30000"/>
                <property name="maxActive" value="100"/>
                <property name="initialSize" value="5"/>
                <property name="maxWait" value="100000"/>
                <property name="removeAbandonedTimeout" value="60"/>
                <property name="minEvictableIdleTimeMillis" value="30000"/>
                <property name="minIdle" value="10"/>
                <property name="logAbandoned" value="true"/>
                <property name="removeAbandoned" value="true"/>
                <property name="jdbcInterceptors" value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer"/>
            </bean>
        </property>
    </bean>

    <!-- autowired-->
    <!--    <context:component-scan base-package="cn.wxper.basic.task" />-->
    <context:component-scan base-package="cn.wxper.basic.service" />
    <!--    <context:component-scan base-package="cn.wxper.basic.dao" />-->

    <!-- mybatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation"  value="classpath:basic-mybatis.xml" />
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.wxper.basic.dao.mappers" />
    </bean>

    <!-- transaction -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" isolation="READ_COMMITTED" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="serviceOperation" expression="execution(* cn.wxper.basic.service..*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>
</beans>